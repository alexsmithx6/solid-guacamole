"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.14.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os, sys
from pathlib import Path
# Logging
from loguru import logger

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Local environment only
if os.environ['ENV'] == 'local':
    logger.info('Loading environment variables from local .env file')
    from dotenv import load_dotenv
    # Load environment variables from .env file
    load_dotenv(os.path.join(BASE_DIR.parent, 'env', 'local', 'django.env'), override=True)
    load_dotenv(os.path.join(BASE_DIR.parent, 'env', 'local', 'postgres.env'), override=True)
    load_dotenv(os.path.join(BASE_DIR.parent, 'env', 'local', 'redis.env'), override=True)

# Configure logger with the log level from environment variable
logger.remove()  # Remove the default logger
logger.add(sys.stdout, level=os.environ['LOG_LEVEL'].upper())

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n)+wbw3l!17a2hrh5^1yln5ee4uufjecyxl=hg9m+(=4bp)n(_'
APPEND_SLASH = True
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', 'backend']

# Authentication backend managers
AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
]
AUTH_USER_MODEL = 'users.account'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',

    'django_extensions',
#django rest framework
    'rest_framework',
    'rest_framework.authtoken',

    'corsheaders',
    'channels',
    
    'users',
    'spotify_history',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 'utils.middleware.token_handler.TokenMiddleware',
    # 'utils.middleware.exception_redirect.ExceptionMiddleware'
]

CORS_ALLOWED_ORIGINS = [
    "https://localhost",
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'
ASGI_APPLICATION = 'backend.asgi.application'

REDIS_SSL = os.environ['REDIS_SSL']
# For Django Channels (if using Redis as a channel layer)
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [f"redis://{os.environ['REDIS_HOST']}:{os.environ['REDIS_PORT']}"]
            # "hosts": [(f"rediss://{os.environ['REDIS_HOST']}:{os.environ['REDIS_PORT']}", os.environ['REDIS_PASSWORD'])],
        },
    },
}
# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': os.environ['POSTGRES_DB'],
        'USER': os.environ['POSTGRES_USER'],
        'PASSWORD': os.environ['POSTGRES_PASSWORD'],
        'HOST': os.environ['POSTGRES_HOST'],
        'PORT': os.environ['POSTGRES_PORT'],
    }
}
FIELD_ENCRYPTION_KEY = os.environ['FIELD_ENCRYPTION_KEY']
SPOTIFY_APP_NAME = 'spotify'
# Spotify API Client Configs
SPOTIFY_API_CLIENT_ID = os.environ['SPOTIFY_API_CLIENT_ID']
SPOTIFY_API_CLIENT_SECRET = os.environ['SPOTIFY_API_CLIENT_SECRET']
SPOTIFY_API_SCOPE = list(str(os.environ['SPOTIFY_API_SCOPE']).split(','))
# Spotify API URLs
SPOTIFY_API_BASE_URL = os.environ['SPOTIFY_API_BASE_URL']
SPOTIFY_API_AUTH_URL = os.environ['SPOTIFY_API_AUTH_URL']
SPOTIFY_API_TOKEN_URL = os.environ['SPOTIFY_API_TOKEN_URL']
# Spotify API endpoints
SPOTIFY_API_RECENTLY_PLAYED_TRACKS_ENDPOINT = os.environ['SPOTIFY_API_RECENTLY_PLAYED_TRACKS_ENDPOINT']
SPOTIFY_API_USER_PROFILE_ENDPOINT = os.environ['SPOTIFY_API_USER_PROFILE_ENDPOINT']
# Spotify API configs
SPOTIFY_API_TOKEN_THRESHOLD_MINUTES = 5

SITE_ID = 1

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_ROOT = "/backend/backend_static/"
STATIC_URL = "/backend_static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
# EMAIL_FILE_PATH = BASE_DIR / 'emails'

SECURE_SSL_REDIRECT = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')